openapi: 3.1.0

info:
  title: Singpods Ops API BETA
  description: Proxy API for external integrations to the Singpods ecosystem.
  version: 0.1.0
  contact:
    name: Singpods
    url: https://www.singpods.com/
    email: hello@singpods.com

tags:
  - name: locations
    description: Location operations
  - name: location-pods
    description: Location pod operations
  - name: bookings
    description: Booking operations

servers:
  - url: https://ops.singpods.com/api/1.0.0
    description: Singpods Production API

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    createBookingRequest:
      type: object
      properties:
        locationId:
          type: string
          description: ID of the location
        podId:
          type: string
          description: ID of the pod
        startDate:
          type: string
          description: "Datetime to start the session [format: ISO 8601]"
        endDate:
          type: string
          description: "Datetime to start the session [format: ISO 8601]"
        customerEmail:
          type: ['null', string]
          description: Email of the customer booking
        customerName:
          type: string
          description: Name of the customer booking
    createBookingResponse:
      type: object
      properties:
        code:
          type: string
          description: 4 digit access code

security:
  - BearerAuth: []

paths:
  "/locations":
    get:
      tags: ["locations"]
      summary: Returns all rentors locations
      description: Get all singpod locations available for the authenticated rentor.
      operationId: getLocations
  "/locations/{id}":
    get:
      tags: ["locations"]
      summary: Returns location by given ID
      description: Get a single singpod location available for the authenticated rentor, based on the id given.
      operationId: getLocation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of location details
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: ecf6fcfd-afc1-453c-ad9e-19ae63e68590
                    head_image:
                      type: string
                      format: uri
                      nullable: true
                      example: null
                    logo:
                      type: string
                      format: uri
                      nullable: true
                      example: null
                    name:
                      type: string
                      example: Test location
                    city:
                      type: string
                      example: London
                    canvas_album_id:
                      type: string
                      format: uuid
                      nullable: true
                      example: null
                    location:
                      type: string
                      example: Location name
                    created_at:
                      type: string
                      format: date-time
                      example: "2024-07-31T07:50:32.238Z"
                    updated_at:
                      type: string
                      format: date-time
                      example: "2024-09-19T12:47:56.339Z"
                    booking_interval:
                      type: integer
                      description: Interval in milliseconds for booking
                      example: 1800000
                    session_interval:
                      type: integer
                      description: Interval in milliseconds for session
                      example: 1800000
                    price_for_interval_in_gbp:
                      type: number
                      format: float
                      example: 30
                    price_for_person_in_gbp:
                      type: number
                      format: float
                      example: 15
                    price_per_song_in_gbp:
                      type: number
                      format: float
                      example: 5
                    price_per_mic_in_gbp:
                      type: number
                      format: float
                      example: 10
                    is_per_song_enabled:
                      type: boolean
                      example: false
                    is_per_mic_enabled:
                      type: boolean
                      example: false
                    persons_select:
                      type: boolean
                      example: false
                    rentorId:
                      type: string
                      format: uuid
                      example: 9d0b93dd-32d9-45f8-b2ec-e612af036b64
                    timezone:
                      type: string
                      example: "Europe/London"
                    showQr:
                      type: boolean
                      example: true
                    alias:
                      type: string
                      example: test
                    published:
                      type: boolean
                      example: true
                    triggers_disable:
                      type: boolean
                      example: true
                    genres_disable:
                      type: boolean
                      example: false
                    statistics_disable:
                      type: boolean
                      example: false
  "/locations/{locationId}/pods":
    get:
      tags: ["location-pods"]
      summary: Returns location pods by given locationId
      description: Get a list of pods available at the given location ID
      operationId: getLocationPods
      parameters:
        - name: locationId
          in: path
          required: true
          schema:
            type: string
  "/bookings":
    post:
      tags: ["bookings"]
      summary: Create a booking
      description: Create a booking based on a location and recieve the pincode for the session in return.
      operationId: createBooking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createBookingRequest"
            examples:
              Successful:
                summary: Successful Request
                value: {
                  "locationId": "54f11c47-9f7c-4891-9b9e-8ff1aaaa6d40",
                  "podId": "3dffc4f-182a-4826-956e-f2ba89137350",
                  "startDate": "2024-10-21T14:00:00+01:00",
                  "endDate": "2024-10-21T14:30:00+01:00",
                  "customerEmail": "john@example.com",
                  "customerName": "John Doe"
                }
      responses:
        "200":
          description: All went well
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createBookingResponse"


